var t=function(){function t(t){this.scene=t}var n=t.prototype;return n.generatePoints=function(t,n){for(var i=this.scene.textures.getFrame(t,n),e=i.width,r=i.height,a=[],h=0;h<r;h++)for(var o=0;o<e;o++)this.scene.textures.getPixelAlpha(o,h,t,n)&&a.push({x:o,y:h});return a},n.test=function(t,n){if(!t||!n)return null;var i=0,e=0;return t.forEach(function(t,r){t.forEach(function(t,a){var h=n[r][a];t&&h?i++:t!==h&&e++})}),{hitsRatio:i/(i+e),hits:i,fails:e}},n.getBounds=function(t){var n={minX:1e6,minY:1e6,maxX:-1e6,maxY:-1e6,width:0,height:0};return t.forEach(function(t){t.x<n.minX?n.minX=t.x:t.x>n.maxX&&(n.maxX=t.x),t.y<n.minY?n.minY=t.y:t.y>n.maxY&&(n.maxY=t.y)}),n.width=n.maxX-n.minX,n.height=n.maxY-n.minY,n},n.makeMatrix=function(t,n,i){void 0===i&&(i=10);var e="string"==typeof t?this.generatePoints(t,n):t,r=this.getBounds(e),a=function(){for(var t=[],n=0;n<i;n++)t.push(new Array(i).fill(!1));return t}(),h=r.width>r.height?Math.floor(r.width/i):Math.floor(r.height/i);return e.forEach(function(t){var n=Math.floor((t.y-r.minY)/h),i=Math.floor((t.x-r.minX)/h);n=Math.min(n,a.length-1),i=Math.min(i,a[0].length-1),a[n][i]=!0}),a},t}();export default t;
